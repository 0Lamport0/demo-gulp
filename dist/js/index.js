!function(C){var A={};function c(g){if(A[g])return A[g].exports;var I=A[g]={exports:{},id:g,loaded:!1};return C[g].call(I.exports,I,I.exports,c),I.loaded=!0,I.exports}c.m=C,c.c=A,c.p="",c(0)}([function(g,I,C){g.exports=C(1)},function(module,exports,__webpack_require__){eval('/*** IMPORTS FROM imports-loader ***/\n\n\nconst IScroll = __webpack_require__(2);\r\n\r\nfunction Page(){\r\n    FastClick.attach(document.body);\r\n    this.catListElem = $(".js-navList");\r\n    this.detListElem = $(".js-contentList");\r\n    // console.log(this.catListElem);\r\n    // console.log(this.detListElem);\r\n};\r\n\r\n$.extend(Page.prototype,{\r\n    init : function(){\r\n        this.getNavData();\r\n        this.getDetailsData();\r\n        // 创建分类滚动\r\n        this.createCategoryScroller();\r\n        // 创建商品滚动\r\n        this.creataProductScroller();\r\n    },\r\n    getNavData : function(){\r\n        $.ajax({\r\n            url : "../json/index.json",\r\n            success : $.proxy(this.handleGetNavDataSucc,this),\r\n            error : $.proxy(this.handleGetNavDataErr,this)\r\n        })\r\n    },\r\n    getDetailsData : function(){\r\n        $.ajax({\r\n            url : "../json/index.json",\r\n            success : $.proxy(this.handleGetDetailsDataSucc,this),\r\n            error : $.proxy(this.handleGetDetailsDataErr,this)\r\n        })\r\n    },\r\n    handleGetNavDataSucc : function(res){\r\n        // console.log(res);\r\n        let str = "";\r\n        for( let i = 0; i < res.navData.categories.length; i ++ ){\r\n            // console.log(res.navData.categories[i]);\r\n            str += "<li class=\'nav-item iconfont\'>" + res.navData.categories[i].icon + "</li>";\r\n        }\r\n        // console.log(str);\r\n        this.catListElem.html(str);\r\n        if( this.categoryScroll ){\r\n            this.categoryScroll.refresh();\r\n        }\r\n    },\r\n    handleGetDetailsDataSucc : function(res){\r\n        // console.log(res);\r\n        let str = "";\r\n        for( let i = 0; i < res.detailsData.commodities.length; i ++ ){\r\n            // console.log(res.detailsData.commodities[i]);\r\n            str += "<li class=\'content-item\'><img src=\'" + res.detailsData.commodities[i].url + "\' alt=\'\' title=\'\' /><dl><dt>" + res.detailsData.commodities[i].title + "</dt><dd>" + res.detailsData.commodities[i].oldPrice + "</dd></dl></li>";\r\n        }\r\n        // console.log(str);\r\n        this.detListElem.html(str);\r\n        if( this.productScroll ){\r\n            this.productScroll.refresh();\r\n        }\r\n    },\r\n    handleGetNavDataErr : function(){\r\n        console.log("getNavData is error");\r\n    },\r\n    handleGetDetailsDataErr : function(){\r\n        console.log("getDetailsData is error");\r\n    },\r\n    createCategoryScroller : function(){\r\n        this.categoryScroll = new IScroll(".nav",{\r\n            scrollX : true,\r\n            scrollY : false\r\n        });\r\n    },\r\n    creataProductScroller : function(){\r\n        this.productScroll = new IScroll(".content",{\r\n            probeType : 3\r\n        });\r\n        // 添加监听事件，实现下拉刷新上拉加载\r\n        this.productScroll.on("scroll",function(){\r\n            // console.log("实现下拉刷新上拉加载");\r\n        });\r\n    }\r\n});\r\nvar page = new Page();\r\npage.init();\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvcGFnZXMvaW5kZXgvaW5kZXguanM/YjlhMyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0FBR0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsbUNBQW1DO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLHdDQUF3QztBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLENBQUM7QUFDRDtBQUNBIiwiZmlsZSI6IjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKioqIElNUE9SVFMgRlJPTSBpbXBvcnRzLWxvYWRlciAqKiovXG5cblxuY29uc3QgSVNjcm9sbCA9IHJlcXVpcmUoXCIuLi8uLi9jb21tb24vaXNjcm9sbC5qc1wiKTtcclxuXHJcbmZ1bmN0aW9uIFBhZ2UoKXtcclxuICAgIEZhc3RDbGljay5hdHRhY2goZG9jdW1lbnQuYm9keSk7XHJcbiAgICB0aGlzLmNhdExpc3RFbGVtID0gJChcIi5qcy1uYXZMaXN0XCIpO1xyXG4gICAgdGhpcy5kZXRMaXN0RWxlbSA9ICQoXCIuanMtY29udGVudExpc3RcIik7XHJcbiAgICAvLyBjb25zb2xlLmxvZyh0aGlzLmNhdExpc3RFbGVtKTtcclxuICAgIC8vIGNvbnNvbGUubG9nKHRoaXMuZGV0TGlzdEVsZW0pO1xyXG59O1xyXG5cclxuJC5leHRlbmQoUGFnZS5wcm90b3R5cGUse1xyXG4gICAgaW5pdCA6IGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgdGhpcy5nZXROYXZEYXRhKCk7XHJcbiAgICAgICAgdGhpcy5nZXREZXRhaWxzRGF0YSgpO1xyXG4gICAgICAgIC8vIOWIm+W7uuWIhuexu+a7muWKqFxyXG4gICAgICAgIHRoaXMuY3JlYXRlQ2F0ZWdvcnlTY3JvbGxlcigpO1xyXG4gICAgICAgIC8vIOWIm+W7uuWVhuWTgea7muWKqFxyXG4gICAgICAgIHRoaXMuY3JlYXRhUHJvZHVjdFNjcm9sbGVyKCk7XHJcbiAgICB9LFxyXG4gICAgZ2V0TmF2RGF0YSA6IGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgJC5hamF4KHtcclxuICAgICAgICAgICAgdXJsIDogXCIuLi9qc29uL2luZGV4Lmpzb25cIixcclxuICAgICAgICAgICAgc3VjY2VzcyA6ICQucHJveHkodGhpcy5oYW5kbGVHZXROYXZEYXRhU3VjYyx0aGlzKSxcclxuICAgICAgICAgICAgZXJyb3IgOiAkLnByb3h5KHRoaXMuaGFuZGxlR2V0TmF2RGF0YUVycix0aGlzKVxyXG4gICAgICAgIH0pXHJcbiAgICB9LFxyXG4gICAgZ2V0RGV0YWlsc0RhdGEgOiBmdW5jdGlvbigpe1xyXG4gICAgICAgICQuYWpheCh7XHJcbiAgICAgICAgICAgIHVybCA6IFwiLi4vanNvbi9pbmRleC5qc29uXCIsXHJcbiAgICAgICAgICAgIHN1Y2Nlc3MgOiAkLnByb3h5KHRoaXMuaGFuZGxlR2V0RGV0YWlsc0RhdGFTdWNjLHRoaXMpLFxyXG4gICAgICAgICAgICBlcnJvciA6ICQucHJveHkodGhpcy5oYW5kbGVHZXREZXRhaWxzRGF0YUVycix0aGlzKVxyXG4gICAgICAgIH0pXHJcbiAgICB9LFxyXG4gICAgaGFuZGxlR2V0TmF2RGF0YVN1Y2MgOiBmdW5jdGlvbihyZXMpe1xyXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKHJlcyk7XHJcbiAgICAgICAgbGV0IHN0ciA9IFwiXCI7XHJcbiAgICAgICAgZm9yKCBsZXQgaSA9IDA7IGkgPCByZXMubmF2RGF0YS5jYXRlZ29yaWVzLmxlbmd0aDsgaSArKyApe1xyXG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhyZXMubmF2RGF0YS5jYXRlZ29yaWVzW2ldKTtcclxuICAgICAgICAgICAgc3RyICs9IFwiPGxpIGNsYXNzPSduYXYtaXRlbSBpY29uZm9udCc+XCIgKyByZXMubmF2RGF0YS5jYXRlZ29yaWVzW2ldLmljb24gKyBcIjwvbGk+XCI7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKHN0cik7XHJcbiAgICAgICAgdGhpcy5jYXRMaXN0RWxlbS5odG1sKHN0cik7XHJcbiAgICAgICAgaWYoIHRoaXMuY2F0ZWdvcnlTY3JvbGwgKXtcclxuICAgICAgICAgICAgdGhpcy5jYXRlZ29yeVNjcm9sbC5yZWZyZXNoKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIGhhbmRsZUdldERldGFpbHNEYXRhU3VjYyA6IGZ1bmN0aW9uKHJlcyl7XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2cocmVzKTtcclxuICAgICAgICBsZXQgc3RyID0gXCJcIjtcclxuICAgICAgICBmb3IoIGxldCBpID0gMDsgaSA8IHJlcy5kZXRhaWxzRGF0YS5jb21tb2RpdGllcy5sZW5ndGg7IGkgKysgKXtcclxuICAgICAgICAgICAgLy8gY29uc29sZS5sb2cocmVzLmRldGFpbHNEYXRhLmNvbW1vZGl0aWVzW2ldKTtcclxuICAgICAgICAgICAgc3RyICs9IFwiPGxpIGNsYXNzPSdjb250ZW50LWl0ZW0nPjxpbWcgc3JjPSdcIiArIHJlcy5kZXRhaWxzRGF0YS5jb21tb2RpdGllc1tpXS51cmwgKyBcIicgYWx0PScnIHRpdGxlPScnIC8+PGRsPjxkdD5cIiArIHJlcy5kZXRhaWxzRGF0YS5jb21tb2RpdGllc1tpXS50aXRsZSArIFwiPC9kdD48ZGQ+XCIgKyByZXMuZGV0YWlsc0RhdGEuY29tbW9kaXRpZXNbaV0ub2xkUHJpY2UgKyBcIjwvZGQ+PC9kbD48L2xpPlwiO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyBjb25zb2xlLmxvZyhzdHIpO1xyXG4gICAgICAgIHRoaXMuZGV0TGlzdEVsZW0uaHRtbChzdHIpO1xyXG4gICAgICAgIGlmKCB0aGlzLnByb2R1Y3RTY3JvbGwgKXtcclxuICAgICAgICAgICAgdGhpcy5wcm9kdWN0U2Nyb2xsLnJlZnJlc2goKTtcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgaGFuZGxlR2V0TmF2RGF0YUVyciA6IGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCJnZXROYXZEYXRhIGlzIGVycm9yXCIpO1xyXG4gICAgfSxcclxuICAgIGhhbmRsZUdldERldGFpbHNEYXRhRXJyIDogZnVuY3Rpb24oKXtcclxuICAgICAgICBjb25zb2xlLmxvZyhcImdldERldGFpbHNEYXRhIGlzIGVycm9yXCIpO1xyXG4gICAgfSxcclxuICAgIGNyZWF0ZUNhdGVnb3J5U2Nyb2xsZXIgOiBmdW5jdGlvbigpe1xyXG4gICAgICAgIHRoaXMuY2F0ZWdvcnlTY3JvbGwgPSBuZXcgSVNjcm9sbChcIi5uYXZcIix7XHJcbiAgICAgICAgICAgIHNjcm9sbFggOiB0cnVlLFxyXG4gICAgICAgICAgICBzY3JvbGxZIDogZmFsc2VcclxuICAgICAgICB9KTtcclxuICAgIH0sXHJcbiAgICBjcmVhdGFQcm9kdWN0U2Nyb2xsZXIgOiBmdW5jdGlvbigpe1xyXG4gICAgICAgIHRoaXMucHJvZHVjdFNjcm9sbCA9IG5ldyBJU2Nyb2xsKFwiLmNvbnRlbnRcIix7XHJcbiAgICAgICAgICAgIHByb2JlVHlwZSA6IDNcclxuICAgICAgICB9KTtcclxuICAgICAgICAvLyDmt7vliqDnm5HlkKzkuovku7bvvIzlrp7njrDkuIvmi4nliLfmlrDkuIrmi4nliqDovb1cclxuICAgICAgICB0aGlzLnByb2R1Y3RTY3JvbGwub24oXCJzY3JvbGxcIixmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhcIuWunueOsOS4i+aLieWIt+aWsOS4iuaLieWKoOi9vVwiKTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxufSk7XHJcbnZhciBwYWdlID0gbmV3IFBhZ2UoKTtcclxucGFnZS5pbml0KCk7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9qcy9wYWdlcy9pbmRleC9pbmRleC5qc1xuLy8gbW9kdWxlIGlkID0gMVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9')},function(module,exports,__webpack_require__){eval("var __WEBPACK_AMD_DEFINE_RESULT__;/*** IMPORTS FROM imports-loader ***/\n\n\n/*! iScroll v5.2.0-snapshot ~ (c) 2008-2017 Matteo Spinelli ~ http://cubiq.org/license */\r\n(function (window, document, Math) {\r\n    var rAF = window.requestAnimationFrame\t||\r\n        window.webkitRequestAnimationFrame\t||\r\n        window.mozRequestAnimationFrame\t\t||\r\n        window.oRequestAnimationFrame\t\t||\r\n        window.msRequestAnimationFrame\t\t||\r\n        function (callback) { window.setTimeout(callback, 1000 / 60); };\r\n    \r\n    var utils = (function () {\r\n        var me = {};\r\n    \r\n        var _elementStyle = document.createElement('div').style;\r\n        var _vendor = (function () {\r\n            var vendors = ['t', 'webkitT', 'MozT', 'msT', 'OT'],\r\n                transform,\r\n                i = 0,\r\n                l = vendors.length;\r\n    \r\n            for ( ; i < l; i++ ) {\r\n                transform = vendors[i] + 'ransform';\r\n                if ( transform in _elementStyle ) return vendors[i].substr(0, vendors[i].length-1);\r\n            }\r\n    \r\n            return false;\r\n        })();\r\n    \r\n        function _prefixStyle (style) {\r\n            if ( _vendor === false ) return false;\r\n            if ( _vendor === '' ) return style;\r\n            return _vendor + style.charAt(0).toUpperCase() + style.substr(1);\r\n        }\r\n    \r\n        me.getTime = Date.now || function getTime () { return new Date().getTime(); };\r\n    \r\n        me.extend = function (target, obj) {\r\n            for ( var i in obj ) {\r\n                target[i] = obj[i];\r\n            }\r\n        };\r\n    \r\n        me.addEvent = function (el, type, fn, capture) {\r\n            el.addEventListener(type, fn, !!capture);\r\n        };\r\n    \r\n        me.removeEvent = function (el, type, fn, capture) {\r\n            el.removeEventListener(type, fn, !!capture);\r\n        };\r\n    \r\n        me.prefixPointerEvent = function (pointerEvent) {\r\n            return window.MSPointerEvent ?\r\n                'MSPointer' + pointerEvent.charAt(7).toUpperCase() + pointerEvent.substr(8):\r\n                pointerEvent;\r\n        };\r\n    \r\n        me.momentum = function (current, start, time, lowerMargin, wrapperSize, deceleration) {\r\n            var distance = current - start,\r\n                speed = Math.abs(distance) / time,\r\n                destination,\r\n                duration;\r\n    \r\n            deceleration = deceleration === undefined ? 0.0006 : deceleration;\r\n    \r\n            destination = current + ( speed * speed ) / ( 2 * deceleration ) * ( distance < 0 ? -1 : 1 );\r\n            duration = speed / deceleration;\r\n    \r\n            if ( destination < lowerMargin ) {\r\n                destination = wrapperSize ? lowerMargin - ( wrapperSize / 2.5 * ( speed / 8 ) ) : lowerMargin;\r\n                distance = Math.abs(destination - current);\r\n                duration = distance / speed;\r\n            } else if ( destination > 0 ) {\r\n                destination = wrapperSize ? wrapperSize / 2.5 * ( speed / 8 ) : 0;\r\n                distance = Math.abs(current) + destination;\r\n                duration = distance / speed;\r\n            }\r\n    \r\n            return {\r\n                destination: Math.round(destination),\r\n                duration: duration\r\n            };\r\n        };\r\n    \r\n        var _transform = _prefixStyle('transform');\r\n    \r\n        me.extend(me, {\r\n            hasTransform: _transform !== false,\r\n            hasPerspective: _prefixStyle('perspective') in _elementStyle,\r\n            hasTouch: 'ontouchstart' in window,\r\n            hasPointer: !!(window.PointerEvent || window.MSPointerEvent), // IE10 is prefixed\r\n            hasTransition: _prefixStyle('transition') in _elementStyle\r\n        });\r\n    \r\n        /*\r\n        This should find all Android browsers lower than build 535.19 (both stock browser and webview)\r\n        - galaxy S2 is ok\r\n        - 2.3.6 : `AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1`\r\n        - 4.0.4 : `AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30`\r\n       - galaxy S3 is badAndroid (stock brower, webview)\r\n         `AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30`\r\n       - galaxy S4 is badAndroid (stock brower, webview)\r\n         `AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30`\r\n       - galaxy S5 is OK\r\n         `AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Mobile Safari/537.36 (Chrome/)`\r\n       - galaxy S6 is OK\r\n         `AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Mobile Safari/537.36 (Chrome/)`\r\n      */\r\n        me.isBadAndroid = (function() {\r\n            var appVersion = window.navigator.appVersion;\r\n            // Android browser is not a chrome browser.\r\n            if (/Android/.test(appVersion) && !(/Chrome\\/\\d/.test(appVersion))) {\r\n                var safariVersion = appVersion.match(/Safari\\/(\\d+.\\d)/);\r\n                if(safariVersion && typeof safariVersion === \"object\" && safariVersion.length >= 2) {\r\n                    return parseFloat(safariVersion[1]) < 535.19;\r\n                } else {\r\n                    return true;\r\n                }\r\n            } else {\r\n                return false;\r\n            }\r\n        })();\r\n    \r\n        me.extend(me.style = {}, {\r\n            transform: _transform,\r\n            transitionTimingFunction: _prefixStyle('transitionTimingFunction'),\r\n            transitionDuration: _prefixStyle('transitionDuration'),\r\n            transitionDelay: _prefixStyle('transitionDelay'),\r\n            transformOrigin: _prefixStyle('transformOrigin'),\r\n            touchAction: _prefixStyle('touchAction')\r\n        });\r\n    \r\n        me.hasClass = function (e, c) {\r\n            var re = new RegExp(\"(^|\\\\s)\" + c + \"(\\\\s|$)\");\r\n            return re.test(e.className);\r\n        };\r\n    \r\n        me.addClass = function (e, c) {\r\n            if ( me.hasClass(e, c) ) {\r\n                return;\r\n            }\r\n    \r\n            var newclass = e.className.split(' ');\r\n            newclass.push(c);\r\n            e.className = newclass.join(' ');\r\n        };\r\n    \r\n        me.removeClass = function (e, c) {\r\n            if ( !me.hasClass(e, c) ) {\r\n                return;\r\n            }\r\n    \r\n            var re = new RegExp(\"(^|\\\\s)\" + c + \"(\\\\s|$)\", 'g');\r\n            e.className = e.className.replace(re, ' ');\r\n        };\r\n    \r\n        me.offset = function (el) {\r\n            var left = -el.offsetLeft,\r\n                top = -el.offsetTop;\r\n    \r\n            // jshint -W084\r\n            while (el = el.offsetParent) {\r\n                left -= el.offsetLeft;\r\n                top -= el.offsetTop;\r\n            }\r\n            // jshint +W084\r\n    \r\n            return {\r\n                left: left,\r\n                top: top\r\n            };\r\n        };\r\n    \r\n        me.preventDefaultException = function (el, exceptions) {\r\n            for ( var i in exceptions ) {\r\n                if ( exceptions[i].test(el[i]) ) {\r\n                    return true;\r\n                }\r\n            }\r\n    \r\n            return false;\r\n        };\r\n    \r\n        me.extend(me.eventType = {}, {\r\n            touchstart: 1,\r\n            touchmove: 1,\r\n            touchend: 1,\r\n    \r\n            mousedown: 2,\r\n            mousemove: 2,\r\n            mouseup: 2,\r\n    \r\n            pointerdown: 3,\r\n            pointermove: 3,\r\n            pointerup: 3,\r\n    \r\n            MSPointerDown: 3,\r\n            MSPointerMove: 3,\r\n            MSPointerUp: 3\r\n        });\r\n    \r\n        me.extend(me.ease = {}, {\r\n            quadratic: {\r\n                style: 'cubic-bezier(0.25, 0.46, 0.45, 0.94)',\r\n                fn: function (k) {\r\n                    return k * ( 2 - k );\r\n                }\r\n            },\r\n            circular: {\r\n                style: 'cubic-bezier(0.1, 0.57, 0.1, 1)',\t// Not properly \"circular\" but this looks better, it should be (0.075, 0.82, 0.165, 1)\r\n                fn: function (k) {\r\n                    return Math.sqrt( 1 - ( --k * k ) );\r\n                }\r\n            },\r\n            back: {\r\n                style: 'cubic-bezier(0.175, 0.885, 0.32, 1.275)',\r\n                fn: function (k) {\r\n                    var b = 4;\r\n                    return ( k = k - 1 ) * k * ( ( b + 1 ) * k + b ) + 1;\r\n                }\r\n            },\r\n            bounce: {\r\n                style: '',\r\n                fn: function (k) {\r\n                    if ( ( k /= 1 ) < ( 1 / 2.75 ) ) {\r\n                        return 7.5625 * k * k;\r\n                    } else if ( k < ( 2 / 2.75 ) ) {\r\n                        return 7.5625 * ( k -= ( 1.5 / 2.75 ) ) * k + 0.75;\r\n                    } else if ( k < ( 2.5 / 2.75 ) ) {\r\n                        return 7.5625 * ( k -= ( 2.25 / 2.75 ) ) * k + 0.9375;\r\n                    } else {\r\n                        return 7.5625 * ( k -= ( 2.625 / 2.75 ) ) * k + 0.984375;\r\n                    }\r\n                }\r\n            },\r\n            elastic: {\r\n                style: '',\r\n                fn: function (k) {\r\n                    var f = 0.22,\r\n                        e = 0.4;\r\n    \r\n                    if ( k === 0 ) { return 0; }\r\n                    if ( k == 1 ) { return 1; }\r\n    \r\n                    return ( e * Math.pow( 2, - 10 * k ) * Math.sin( ( k - f / 4 ) * ( 2 * Math.PI ) / f ) + 1 );\r\n                }\r\n            }\r\n        });\r\n    \r\n        me.tap = function (e, eventName) {\r\n            var ev = document.createEvent('Event');\r\n            ev.initEvent(eventName, true, true);\r\n            ev.pageX = e.pageX;\r\n            ev.pageY = e.pageY;\r\n            e.target.dispatchEvent(ev);\r\n        };\r\n    \r\n        me.click = function (e) {\r\n            var target = e.target,\r\n                ev;\r\n    \r\n            if ( !(/(SELECT|INPUT|TEXTAREA)/i).test(target.tagName) ) {\r\n                // https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/initMouseEvent\r\n                // initMouseEvent is deprecated.\r\n                ev = document.createEvent(window.MouseEvent ? 'MouseEvents' : 'Event');\r\n                ev.initEvent('click', true, true);\r\n                ev.view = e.view || window;\r\n                ev.detail = 1;\r\n                ev.screenX = target.screenX || 0;\r\n                ev.screenY = target.screenY || 0;\r\n                ev.clientX = target.clientX || 0;\r\n                ev.clientY = target.clientY || 0;\r\n                ev.ctrlKey = !!e.ctrlKey;\r\n                ev.altKey = !!e.altKey;\r\n                ev.shiftKey = !!e.shiftKey;\r\n                ev.metaKey = !!e.metaKey;\r\n                ev.button = 0;\r\n                ev.relatedTarget = null;\r\n                ev._constructed = true;\r\n                target.dispatchEvent(ev);\r\n            }\r\n        };\r\n    \r\n        me.getTouchAction = function(eventPassthrough, addPinch) {\r\n            var touchAction = 'none';\r\n            if ( eventPassthrough === 'vertical' ) {\r\n                touchAction = 'pan-y';\r\n            } else if (eventPassthrough === 'horizontal' ) {\r\n                touchAction = 'pan-x';\r\n            }\r\n            if (addPinch && touchAction != 'none') {\r\n                // add pinch-zoom support if the browser supports it, but if not (eg. Chrome <55) do nothing\r\n                touchAction += ' pinch-zoom';\r\n            }\r\n            return touchAction;\r\n        };\r\n    \r\n        me.getRect = function(el) {\r\n            if (el instanceof SVGElement) {\r\n                var rect = el.getBoundingClientRect();\r\n                return {\r\n                    top : rect.top,\r\n                    left : rect.left,\r\n                    width : rect.width,\r\n                    height : rect.height\r\n                };\r\n            } else {\r\n                return {\r\n                    top : el.offsetTop,\r\n                    left : el.offsetLeft,\r\n                    width : el.offsetWidth,\r\n                    height : el.offsetHeight\r\n                };\r\n            }\r\n        };\r\n    \r\n        return me;\r\n    })();\r\n    function IScroll (el, options) {\r\n        this.wrapper = typeof el == 'string' ? document.querySelector(el) : el;\r\n        this.scroller = this.wrapper.children[0];\r\n        this.scrollerStyle = this.scroller.style;\t\t// cache style for better performance\r\n    \r\n        this.options = {\r\n    \r\n            resizeScrollbars: true,\r\n    \r\n            mouseWheelSpeed: 20,\r\n    \r\n            snapThreshold: 0.334,\r\n    \r\n    // INSERT POINT: OPTIONS\r\n            disablePointer : !utils.hasPointer,\r\n            disableTouch : utils.hasPointer || !utils.hasTouch,\r\n            disableMouse : utils.hasPointer || utils.hasTouch,\r\n            startX: 0,\r\n            startY: 0,\r\n            scrollY: true,\r\n            directionLockThreshold: 5,\r\n            momentum: true,\r\n    \r\n            bounce: true,\r\n            bounceTime: 600,\r\n            bounceEasing: '',\r\n    \r\n            preventDefault: true,\r\n            preventDefaultException: { tagName: /^(INPUT|TEXTAREA|BUTTON|SELECT)$/ },\r\n    \r\n            HWCompositing: true,\r\n            useTransition: true,\r\n            useTransform: true,\r\n            bindToWrapper: typeof window.onmousedown === \"undefined\"\r\n        };\r\n    \r\n        for ( var i in options ) {\r\n            this.options[i] = options[i];\r\n        }\r\n    \r\n        // Normalize options\r\n        this.translateZ = this.options.HWCompositing && utils.hasPerspective ? ' translateZ(0)' : '';\r\n    \r\n        this.options.useTransition = utils.hasTransition && this.options.useTransition;\r\n        this.options.useTransform = utils.hasTransform && this.options.useTransform;\r\n    \r\n        this.options.eventPassthrough = this.options.eventPassthrough === true ? 'vertical' : this.options.eventPassthrough;\r\n        this.options.preventDefault = !this.options.eventPassthrough && this.options.preventDefault;\r\n    \r\n        // If you want eventPassthrough I have to lock one of the axes\r\n        this.options.scrollY = this.options.eventPassthrough == 'vertical' ? false : this.options.scrollY;\r\n        this.options.scrollX = this.options.eventPassthrough == 'horizontal' ? false : this.options.scrollX;\r\n    \r\n        // With eventPassthrough we also need lockDirection mechanism\r\n        this.options.freeScroll = this.options.freeScroll && !this.options.eventPassthrough;\r\n        this.options.directionLockThreshold = this.options.eventPassthrough ? 0 : this.options.directionLockThreshold;\r\n    \r\n        this.options.bounceEasing = typeof this.options.bounceEasing == 'string' ? utils.ease[this.options.bounceEasing] || utils.ease.circular : this.options.bounceEasing;\r\n    \r\n        this.options.resizePolling = this.options.resizePolling === undefined ? 60 : this.options.resizePolling;\r\n    \r\n        if ( this.options.tap === true ) {\r\n            this.options.tap = 'tap';\r\n        }\r\n    \r\n        // https://github.com/cubiq/iscroll/issues/1029\r\n        if (!this.options.useTransition && !this.options.useTransform) {\r\n            if(!(/relative|absolute/i).test(this.scrollerStyle.position)) {\r\n                this.scrollerStyle.position = \"relative\";\r\n            }\r\n        }\r\n    \r\n        if ( this.options.shrinkScrollbars == 'scale' ) {\r\n            this.options.useTransition = false;\r\n        }\r\n    \r\n        this.options.invertWheelDirection = this.options.invertWheelDirection ? -1 : 1;\r\n    \r\n        if ( this.options.probeType == 3 ) {\r\n            this.options.useTransition = false;\t}\r\n    \r\n    // INSERT POINT: NORMALIZATION\r\n    \r\n        // Some defaults\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.directionX = 0;\r\n        this.directionY = 0;\r\n        this._events = {};\r\n    \r\n    // INSERT POINT: DEFAULTS\r\n    \r\n        this._init();\r\n        this.refresh();\r\n    \r\n        this.scrollTo(this.options.startX, this.options.startY);\r\n        this.enable();\r\n    }\r\n    \r\n    IScroll.prototype = {\r\n        version: '5.2.0-snapshot',\r\n    \r\n        _init: function () {\r\n            this._initEvents();\r\n    \r\n            if ( this.options.scrollbars || this.options.indicators ) {\r\n                this._initIndicators();\r\n            }\r\n    \r\n            if ( this.options.mouseWheel ) {\r\n                this._initWheel();\r\n            }\r\n    \r\n            if ( this.options.snap ) {\r\n                this._initSnap();\r\n            }\r\n    \r\n            if ( this.options.keyBindings ) {\r\n                this._initKeys();\r\n            }\r\n    \r\n    // INSERT POINT: _init\r\n    \r\n        },\r\n    \r\n        destroy: function () {\r\n            this._initEvents(true);\r\n            clearTimeout(this.resizeTimeout);\r\n             this.resizeTimeout = null;\r\n            this._execEvent('destroy');\r\n        },\r\n    \r\n        _transitionEnd: function (e) {\r\n            if ( e.target != this.scroller || !this.isInTransition ) {\r\n                return;\r\n            }\r\n    \r\n            this._transitionTime();\r\n            if ( !this.resetPosition(this.options.bounceTime) ) {\r\n                this.isInTransition = false;\r\n                this._execEvent('scrollEnd');\r\n            }\r\n        },\r\n    \r\n        _start: function (e) {\r\n            // React to left mouse button only\r\n            if ( utils.eventType[e.type] != 1 ) {\r\n              // for button property\r\n              // http://unixpapa.com/js/mouse.html\r\n              var button;\r\n            if (!e.which) {\r\n              /* IE case */\r\n              button = (e.button < 2) ? 0 :\r\n                       ((e.button == 4) ? 1 : 2);\r\n            } else {\r\n              /* All others */\r\n              button = e.button;\r\n            }\r\n                if ( button !== 0 ) {\r\n                    return;\r\n                }\r\n            }\r\n    \r\n            if ( !this.enabled || (this.initiated && utils.eventType[e.type] !== this.initiated) ) {\r\n                return;\r\n            }\r\n    \r\n            if ( this.options.preventDefault && !utils.isBadAndroid && !utils.preventDefaultException(e.target, this.options.preventDefaultException) ) {\r\n                e.preventDefault();\r\n            }\r\n    \r\n            var point = e.touches ? e.touches[0] : e,\r\n                pos;\r\n    \r\n            this.initiated\t= utils.eventType[e.type];\r\n            this.moved\t\t= false;\r\n            this.distX\t\t= 0;\r\n            this.distY\t\t= 0;\r\n            this.directionX = 0;\r\n            this.directionY = 0;\r\n            this.directionLocked = 0;\r\n    \r\n            this.startTime = utils.getTime();\r\n    \r\n            if ( this.options.useTransition && this.isInTransition ) {\r\n                this._transitionTime();\r\n                this.isInTransition = false;\r\n                pos = this.getComputedPosition();\r\n                this._translate(Math.round(pos.x), Math.round(pos.y));\r\n                this._execEvent('scrollEnd');\r\n            } else if ( !this.options.useTransition && this.isAnimating ) {\r\n                this.isAnimating = false;\r\n                this._execEvent('scrollEnd');\r\n            }\r\n    \r\n            this.startX    = this.x;\r\n            this.startY    = this.y;\r\n            this.absStartX = this.x;\r\n            this.absStartY = this.y;\r\n            this.pointX    = point.pageX;\r\n            this.pointY    = point.pageY;\r\n    \r\n            this._execEvent('beforeScrollStart');\r\n        },\r\n    \r\n        _move: function (e) {\r\n            if ( !this.enabled || utils.eventType[e.type] !== this.initiated ) {\r\n                return;\r\n            }\r\n    \r\n            if ( this.options.preventDefault ) {\t// increases performance on Android? TODO: check!\r\n                e.preventDefault();\r\n            }\r\n    \r\n            var point\t\t= e.touches ? e.touches[0] : e,\r\n                deltaX\t\t= point.pageX - this.pointX,\r\n                deltaY\t\t= point.pageY - this.pointY,\r\n                timestamp\t= utils.getTime(),\r\n                newX, newY,\r\n                absDistX, absDistY;\r\n    \r\n            this.pointX\t\t= point.pageX;\r\n            this.pointY\t\t= point.pageY;\r\n    \r\n            this.distX\t\t+= deltaX;\r\n            this.distY\t\t+= deltaY;\r\n            absDistX\t\t= Math.abs(this.distX);\r\n            absDistY\t\t= Math.abs(this.distY);\r\n    \r\n            // We need to move at least 10 pixels for the scrolling to initiate\r\n            if ( timestamp - this.endTime > 300 && (absDistX < 10 && absDistY < 10) ) {\r\n                return;\r\n            }\r\n    \r\n            // If you are scrolling in one direction lock the other\r\n            if ( !this.directionLocked && !this.options.freeScroll ) {\r\n                if ( absDistX > absDistY + this.options.directionLockThreshold ) {\r\n                    this.directionLocked = 'h';\t\t// lock horizontally\r\n                } else if ( absDistY >= absDistX + this.options.directionLockThreshold ) {\r\n                    this.directionLocked = 'v';\t\t// lock vertically\r\n                } else {\r\n                    this.directionLocked = 'n';\t\t// no lock\r\n                }\r\n            }\r\n    \r\n            if ( this.directionLocked == 'h' ) {\r\n                if ( this.options.eventPassthrough == 'vertical' ) {\r\n                    e.preventDefault();\r\n                } else if ( this.options.eventPassthrough == 'horizontal' ) {\r\n                    this.initiated = false;\r\n                    return;\r\n                }\r\n    \r\n                deltaY = 0;\r\n            } else if ( this.directionLocked == 'v' ) {\r\n                if ( this.options.eventPassthrough == 'horizontal' ) {\r\n                    e.preventDefault();\r\n                } else if ( this.options.eventPassthrough == 'vertical' ) {\r\n                    this.initiated = false;\r\n                    return;\r\n                }\r\n    \r\n                deltaX = 0;\r\n            }\r\n    \r\n            deltaX = this.hasHorizontalScroll ? deltaX : 0;\r\n            deltaY = this.hasVerticalScroll ? deltaY : 0;\r\n    \r\n            newX = this.x + deltaX;\r\n            newY = this.y + deltaY;\r\n    \r\n            // Slow down if outside of the boundaries\r\n            if ( newX > 0 || newX < this.maxScrollX ) {\r\n                newX = this.options.bounce ? this.x + deltaX / 3 : newX > 0 ? 0 : this.maxScrollX;\r\n            }\r\n            if ( newY > 0 || newY < this.maxScrollY ) {\r\n                newY = this.options.bounce ? this.y + deltaY / 3 : newY > 0 ? 0 : this.maxScrollY;\r\n            }\r\n    \r\n            this.directionX = deltaX > 0 ? -1 : deltaX < 0 ? 1 : 0;\r\n            this.directionY = deltaY > 0 ? -1 : deltaY < 0 ? 1 : 0;\r\n    \r\n            if ( !this.moved ) {\r\n                this._execEvent('scrollStart');\r\n            }\r\n    \r\n            this.moved = true;\r\n    \r\n            this._translate(newX, newY);\r\n    \r\n    /* REPLACE START: _move */\r\n            if ( timestamp - this.startTime > 300 ) {\r\n                this.startTime = timestamp;\r\n                this.startX = this.x;\r\n                this.startY = this.y;\r\n    \r\n                if ( this.options.probeType == 1 ) {\r\n                    this._execEvent('scroll');\r\n                }\r\n            }\r\n    \r\n            if ( this.options.probeType > 1 ) {\r\n                this._execEvent('scroll');\r\n            }\r\n    /* REPLACE END: _move */\r\n    \r\n        },\r\n    \r\n        _end: function (e) {\r\n            if ( !this.enabled || utils.eventType[e.type] !== this.initiated ) {\r\n                return;\r\n            }\r\n    \r\n            if ( this.options.preventDefault && !utils.preventDefaultException(e.target, this.options.preventDefaultException) ) {\r\n                e.preventDefault();\r\n            }\r\n    \r\n            var point = e.changedTouches ? e.changedTouches[0] : e,\r\n                momentumX,\r\n                momentumY,\r\n                duration = utils.getTime() - this.startTime,\r\n                newX = Math.round(this.x),\r\n                newY = Math.round(this.y),\r\n                distanceX = Math.abs(newX - this.startX),\r\n                distanceY = Math.abs(newY - this.startY),\r\n                time = 0,\r\n                easing = '';\r\n    \r\n            this.isInTransition = 0;\r\n            this.initiated = 0;\r\n            this.endTime = utils.getTime();\r\n    \r\n            // reset if we are outside of the boundaries\r\n            if ( this.resetPosition(this.options.bounceTime) ) {\r\n                return;\r\n            }\r\n    \r\n            this.scrollTo(newX, newY);\t// ensures that the last position is rounded\r\n    \r\n            // we scrolled less than 10 pixels\r\n            if ( !this.moved ) {\r\n                if ( this.options.tap ) {\r\n                    utils.tap(e, this.options.tap);\r\n                }\r\n    \r\n                if ( this.options.click ) {\r\n                    utils.click(e);\r\n                }\r\n    \r\n                this._execEvent('scrollCancel');\r\n                return;\r\n            }\r\n    \r\n            if ( this._events.flick && duration < 200 && distanceX < 100 && distanceY < 100 ) {\r\n                this._execEvent('flick');\r\n                return;\r\n            }\r\n    \r\n            // start momentum animation if needed\r\n            if ( this.options.momentum && duration < 300 ) {\r\n                momentumX = this.hasHorizontalScroll ? utils.momentum(this.x, this.startX, duration, this.maxScrollX, this.options.bounce ? this.wrapperWidth : 0, this.options.deceleration) : { destination: newX, duration: 0 };\r\n                momentumY = this.hasVerticalScroll ? utils.momentum(this.y, this.startY, duration, this.maxScrollY, this.options.bounce ? this.wrapperHeight : 0, this.options.deceleration) : { destination: newY, duration: 0 };\r\n                newX = momentumX.destination;\r\n                newY = momentumY.destination;\r\n                time = Math.max(momentumX.duration, momentumY.duration);\r\n                this.isInTransition = 1;\r\n            }\r\n    \r\n    \r\n            if ( this.options.snap ) {\r\n                var snap = this._nearestSnap(newX, newY);\r\n                this.currentPage = snap;\r\n                time = this.options.snapSpeed || Math.max(\r\n                        Math.max(\r\n                            Math.min(Math.abs(newX - snap.x), 1000),\r\n                            Math.min(Math.abs(newY - snap.y), 1000)\r\n                        ), 300);\r\n                newX = snap.x;\r\n                newY = snap.y;\r\n    \r\n                this.directionX = 0;\r\n                this.directionY = 0;\r\n                easing = this.options.bounceEasing;\r\n            }\r\n    \r\n    // INSERT POINT: _end\r\n    \r\n            if ( newX != this.x || newY != this.y ) {\r\n                // change easing function when scroller goes out of the boundaries\r\n                if ( newX > 0 || newX < this.maxScrollX || newY > 0 || newY < this.maxScrollY ) {\r\n                    easing = utils.ease.quadratic;\r\n                }\r\n    \r\n                this.scrollTo(newX, newY, time, easing);\r\n                return;\r\n            }\r\n    \r\n            this._execEvent('scrollEnd');\r\n        },\r\n    \r\n        _resize: function () {\r\n            var that = this;\r\n    \r\n            clearTimeout(this.resizeTimeout);\r\n    \r\n            this.resizeTimeout = setTimeout(function () {\r\n                that.refresh();\r\n            }, this.options.resizePolling);\r\n        },\r\n    \r\n        resetPosition: function (time) {\r\n            var x = this.x,\r\n                y = this.y;\r\n    \r\n            time = time || 0;\r\n    \r\n            if ( !this.hasHorizontalScroll || this.x > 0 ) {\r\n                x = 0;\r\n            } else if ( this.x < this.maxScrollX ) {\r\n                x = this.maxScrollX;\r\n            }\r\n    \r\n            if ( !this.hasVerticalScroll || this.y > 0 ) {\r\n                y = 0;\r\n            } else if ( this.y < this.maxScrollY ) {\r\n                y = this.maxScrollY;\r\n            }\r\n    \r\n            if ( x == this.x && y == this.y ) {\r\n                return false;\r\n            }\r\n    \r\n            this.scrollTo(x, y, time, this.options.bounceEasing);\r\n    \r\n            return true;\r\n        },\r\n    \r\n        disable: function () {\r\n            this.enabled = false;\r\n        },\r\n    \r\n        enable: function () {\r\n            this.enabled = true;\r\n        },\r\n    \r\n        refresh: function () {\r\n            utils.getRect(this.wrapper);\t\t// Force reflow\r\n    \r\n            this.wrapperWidth\t= this.wrapper.clientWidth;\r\n            this.wrapperHeight\t= this.wrapper.clientHeight;\r\n    \r\n            var rect = utils.getRect(this.scroller);\r\n    /* REPLACE START: refresh */\r\n    \r\n            this.scrollerWidth\t= rect.width;\r\n            this.scrollerHeight\t= rect.height;\r\n    \r\n            this.maxScrollX\t\t= this.wrapperWidth - this.scrollerWidth;\r\n            this.maxScrollY\t\t= this.wrapperHeight - this.scrollerHeight;\r\n    \r\n    /* REPLACE END: refresh */\r\n    \r\n            this.hasHorizontalScroll\t= this.options.scrollX && this.maxScrollX < 0;\r\n            this.hasVerticalScroll\t\t= this.options.scrollY && this.maxScrollY < 0;\r\n            \r\n            if ( !this.hasHorizontalScroll ) {\r\n                this.maxScrollX = 0;\r\n                this.scrollerWidth = this.wrapperWidth;\r\n            }\r\n    \r\n            if ( !this.hasVerticalScroll ) {\r\n                this.maxScrollY = 0;\r\n                this.scrollerHeight = this.wrapperHeight;\r\n            }\r\n    \r\n            this.endTime = 0;\r\n            this.directionX = 0;\r\n            this.directionY = 0;\r\n            \r\n            if(utils.hasPointer && !this.options.disablePointer) {\r\n                // The wrapper should have `touchAction` property for using pointerEvent.\r\n                this.wrapper.style[utils.style.touchAction] = utils.getTouchAction(this.options.eventPassthrough, true);\r\n    \r\n                // case. not support 'pinch-zoom'\r\n                // https://github.com/cubiq/iscroll/issues/1118#issuecomment-270057583\r\n                if (!this.wrapper.style[utils.style.touchAction]) {\r\n                    this.wrapper.style[utils.style.touchAction] = utils.getTouchAction(this.options.eventPassthrough, false);\r\n                }\r\n            }\r\n            this.wrapperOffset = utils.offset(this.wrapper);\r\n    \r\n            this._execEvent('refresh');\r\n    \r\n            this.resetPosition();\r\n    \r\n    // INSERT POINT: _refresh\r\n    \r\n        },\t\r\n    \r\n        on: function (type, fn) {\r\n            if ( !this._events[type] ) {\r\n                this._events[type] = [];\r\n            }\r\n    \r\n            this._events[type].push(fn);\r\n        },\r\n    \r\n        off: function (type, fn) {\r\n            if ( !this._events[type] ) {\r\n                return;\r\n            }\r\n    \r\n            var index = this._events[type].indexOf(fn);\r\n    \r\n            if ( index > -1 ) {\r\n                this._events[type].splice(index, 1);\r\n            }\r\n        },\r\n    \r\n        _execEvent: function (type) {\r\n            if ( !this._events[type] ) {\r\n                return;\r\n            }\r\n    \r\n            var i = 0,\r\n                l = this._events[type].length;\r\n    \r\n            if ( !l ) {\r\n                return;\r\n            }\r\n    \r\n            for ( ; i < l; i++ ) {\r\n                this._events[type][i].apply(this, [].slice.call(arguments, 1));\r\n            }\r\n        },\r\n    \r\n        scrollBy: function (x, y, time, easing) {\r\n            x = this.x + x;\r\n            y = this.y + y;\r\n            time = time || 0;\r\n    \r\n            this.scrollTo(x, y, time, easing);\r\n        },\r\n    \r\n        scrollTo: function (x, y, time, easing) {\r\n            easing = easing || utils.ease.circular;\r\n    \r\n            this.isInTransition = this.options.useTransition && time > 0;\r\n            var transitionType = this.options.useTransition && easing.style;\r\n            if ( !time || transitionType ) {\r\n                    if(transitionType) {\r\n                        this._transitionTimingFunction(easing.style);\r\n                        this._transitionTime(time);\r\n                    }\r\n                this._translate(x, y);\r\n            } else {\r\n                this._animate(x, y, time, easing.fn);\r\n            }\r\n        },\r\n    \r\n        scrollToElement: function (el, time, offsetX, offsetY, easing) {\r\n            el = el.nodeType ? el : this.scroller.querySelector(el);\r\n    \r\n            if ( !el ) {\r\n                return;\r\n            }\r\n    \r\n            var pos = utils.offset(el);\r\n    \r\n            pos.left -= this.wrapperOffset.left;\r\n            pos.top  -= this.wrapperOffset.top;\r\n    \r\n            // if offsetX/Y are true we center the element to the screen\r\n            var elRect = utils.getRect(el);\r\n            var wrapperRect = utils.getRect(this.wrapper);\r\n            if ( offsetX === true ) {\r\n                offsetX = Math.round(elRect.width / 2 - wrapperRect.width / 2);\r\n            }\r\n            if ( offsetY === true ) {\r\n                offsetY = Math.round(elRect.height / 2 - wrapperRect.height / 2);\r\n            }\r\n    \r\n            pos.left -= offsetX || 0;\r\n            pos.top  -= offsetY || 0;\r\n    \r\n            pos.left = pos.left > 0 ? 0 : pos.left < this.maxScrollX ? this.maxScrollX : pos.left;\r\n            pos.top  = pos.top  > 0 ? 0 : pos.top  < this.maxScrollY ? this.maxScrollY : pos.top;\r\n    \r\n            time = time === undefined || time === null || time === 'auto' ? Math.max(Math.abs(this.x-pos.left), Math.abs(this.y-pos.top)) : time;\r\n    \r\n            this.scrollTo(pos.left, pos.top, time, easing);\r\n        },\r\n    \r\n        _transitionTime: function (time) {\r\n            if (!this.options.useTransition) {\r\n                return;\r\n            }\r\n            time = time || 0;\r\n            var durationProp = utils.style.transitionDuration;\r\n            if(!durationProp) {\r\n                return;\r\n            }\r\n    \r\n            this.scrollerStyle[durationProp] = time + 'ms';\r\n    \r\n            if ( !time && utils.isBadAndroid ) {\r\n                this.scrollerStyle[durationProp] = '0.0001ms';\r\n                // remove 0.0001ms\r\n                var self = this;\r\n                rAF(function() {\r\n                    if(self.scrollerStyle[durationProp] === '0.0001ms') {\r\n                        self.scrollerStyle[durationProp] = '0s';\r\n                    }\r\n                });\r\n            }\r\n    \r\n    \r\n            if ( this.indicators ) {\r\n                for ( var i = this.indicators.length; i--; ) {\r\n                    this.indicators[i].transitionTime(time);\r\n                }\r\n            }\r\n    \r\n    \r\n    // INSERT POINT: _transitionTime\r\n    \r\n        },\r\n    \r\n        _transitionTimingFunction: function (easing) {\r\n            this.scrollerStyle[utils.style.transitionTimingFunction] = easing;\r\n    \r\n    \r\n            if ( this.indicators ) {\r\n                for ( var i = this.indicators.length; i--; ) {\r\n                    this.indicators[i].transitionTimingFunction(easing);\r\n                }\r\n            }\r\n    \r\n    \r\n    // INSERT POINT: _transitionTimingFunction\r\n    \r\n        },\r\n    \r\n        _translate: function (x, y) {\r\n            if ( this.options.useTransform ) {\r\n    \r\n    /* REPLACE START: _translate */\r\n    \r\n                this.scrollerStyle[utils.style.transform] = 'translate(' + x + 'px,' + y + 'px)' + this.translateZ;\r\n    \r\n    /* REPLACE END: _translate */\r\n    \r\n            } else {\r\n                x = Math.round(x);\r\n                y = Math.round(y);\r\n                this.scrollerStyle.left = x + 'px';\r\n                this.scrollerStyle.top = y + 'px';\r\n            }\r\n    \r\n            this.x = x;\r\n            this.y = y;\r\n    \r\n    \r\n        if ( this.indicators ) {\r\n            for ( var i = this.indicators.length; i--; ) {\r\n                this.indicators[i].updatePosition();\r\n            }\r\n        }\r\n    \r\n    \r\n    // INSERT POINT: _translate\r\n    \r\n        },\r\n    \r\n        _initEvents: function (remove) {\r\n            var eventType = remove ? utils.removeEvent : utils.addEvent,\r\n                target = this.options.bindToWrapper ? this.wrapper : window;\r\n    \r\n            eventType(window, 'orientationchange', this);\r\n            eventType(window, 'resize', this);\r\n    \r\n            if ( this.options.click ) {\r\n                eventType(this.wrapper, 'click', this, true);\r\n            }\r\n    \r\n            if ( !this.options.disableMouse ) {\r\n                eventType(this.wrapper, 'mousedown', this);\r\n                eventType(target, 'mousemove', this);\r\n                eventType(target, 'mousecancel', this);\r\n                eventType(target, 'mouseup', this);\r\n            }\r\n    \r\n            if ( utils.hasPointer && !this.options.disablePointer ) {\r\n                eventType(this.wrapper, utils.prefixPointerEvent('pointerdown'), this);\r\n                eventType(target, utils.prefixPointerEvent('pointermove'), this);\r\n                eventType(target, utils.prefixPointerEvent('pointercancel'), this);\r\n                eventType(target, utils.prefixPointerEvent('pointerup'), this);\r\n            }\r\n    \r\n            if ( utils.hasTouch && !this.options.disableTouch ) {\r\n                eventType(this.wrapper, 'touchstart', this);\r\n                eventType(target, 'touchmove', this);\r\n                eventType(target, 'touchcancel', this);\r\n                eventType(target, 'touchend', this);\r\n            }\r\n    \r\n            eventType(this.scroller, 'transitionend', this);\r\n            eventType(this.scroller, 'webkitTransitionEnd', this);\r\n            eventType(this.scroller, 'oTransitionEnd', this);\r\n            eventType(this.scroller, 'MSTransitionEnd', this);\r\n        },\r\n    \r\n        getComputedPosition: function () {\r\n            var matrix = window.getComputedStyle(this.scroller, null),\r\n                x, y;\r\n    \r\n            if ( this.options.useTransform ) {\r\n                matrix = matrix[utils.style.transform].split(')')[0].split(', ');\r\n                x = +(matrix[12] || matrix[4]);\r\n                y = +(matrix[13] || matrix[5]);\r\n            } else {\r\n                x = +matrix.left.replace(/[^-\\d.]/g, '');\r\n                y = +matrix.top.replace(/[^-\\d.]/g, '');\r\n            }\r\n    \r\n            return { x: x, y: y };\r\n        },\r\n        _initIndicators: function () {\r\n            var interactive = this.options.interactiveScrollbars,\r\n                customStyle = typeof this.options.scrollbars != 'string',\r\n                indicators = [],\r\n                indicator;\r\n    \r\n            var that = this;\r\n    \r\n            this.indicators = [];\r\n    \r\n            if ( this.options.scrollbars ) {\r\n                // Vertical scrollbar\r\n                if ( this.options.scrollY ) {\r\n                    indicator = {\r\n                        el: createDefaultScrollbar('v', interactive, this.options.scrollbars),\r\n                        interactive: interactive,\r\n                        defaultScrollbars: true,\r\n                        customStyle: customStyle,\r\n                        resize: this.options.resizeScrollbars,\r\n                        shrink: this.options.shrinkScrollbars,\r\n                        fade: this.options.fadeScrollbars,\r\n                        listenX: false\r\n                    };\r\n    \r\n                    this.wrapper.appendChild(indicator.el);\r\n                    indicators.push(indicator);\r\n                }\r\n    \r\n                // Horizontal scrollbar\r\n                if ( this.options.scrollX ) {\r\n                    indicator = {\r\n                        el: createDefaultScrollbar('h', interactive, this.options.scrollbars),\r\n                        interactive: interactive,\r\n                        defaultScrollbars: true,\r\n                        customStyle: customStyle,\r\n                        resize: this.options.resizeScrollbars,\r\n                        shrink: this.options.shrinkScrollbars,\r\n                        fade: this.options.fadeScrollbars,\r\n                        listenY: false\r\n                    };\r\n    \r\n                    this.wrapper.appendChild(indicator.el);\r\n                    indicators.push(indicator);\r\n                }\r\n            }\r\n    \r\n            if ( this.options.indicators ) {\r\n                // TODO: check concat compatibility\r\n                indicators = indicators.concat(this.options.indicators);\r\n            }\r\n    \r\n            for ( var i = indicators.length; i--; ) {\r\n                this.indicators.push( new Indicator(this, indicators[i]) );\r\n            }\r\n    \r\n            // TODO: check if we can use array.map (wide compatibility and performance issues)\r\n            function _indicatorsMap (fn) {\r\n                if (that.indicators) {\r\n                    for ( var i = that.indicators.length; i--; ) {\r\n                        fn.call(that.indicators[i]);\r\n                    }\r\n                }\r\n            }\r\n    \r\n            if ( this.options.fadeScrollbars ) {\r\n                this.on('scrollEnd', function () {\r\n                    _indicatorsMap(function () {\r\n                        this.fade();\r\n                    });\r\n                });\r\n    \r\n                this.on('scrollCancel', function () {\r\n                    _indicatorsMap(function () {\r\n                        this.fade();\r\n                    });\r\n                });\r\n    \r\n                this.on('scrollStart', function () {\r\n                    _indicatorsMap(function () {\r\n                        this.fade(1);\r\n                    });\r\n                });\r\n    \r\n                this.on('beforeScrollStart', function () {\r\n                    _indicatorsMap(function () {\r\n                        this.fade(1, true);\r\n                    });\r\n                });\r\n            }\r\n    \r\n    \r\n            this.on('refresh', function () {\r\n                _indicatorsMap(function () {\r\n                    this.refresh();\r\n                });\r\n            });\r\n    \r\n            this.on('destroy', function () {\r\n                _indicatorsMap(function () {\r\n                    this.destroy();\r\n                });\r\n    \r\n                delete this.indicators;\r\n            });\r\n        },\r\n    \r\n        _initWheel: function () {\r\n            utils.addEvent(this.wrapper, 'wheel', this);\r\n            utils.addEvent(this.wrapper, 'mousewheel', this);\r\n            utils.addEvent(this.wrapper, 'DOMMouseScroll', this);\r\n    \r\n            this.on('destroy', function () {\r\n                clearTimeout(this.wheelTimeout);\r\n                this.wheelTimeout = null;\r\n                utils.removeEvent(this.wrapper, 'wheel', this);\r\n                utils.removeEvent(this.wrapper, 'mousewheel', this);\r\n                utils.removeEvent(this.wrapper, 'DOMMouseScroll', this);\r\n            });\r\n        },\r\n    \r\n        _wheel: function (e) {\r\n            if ( !this.enabled ) {\r\n                return;\r\n            }\r\n    \r\n            e.preventDefault();\r\n    \r\n            var wheelDeltaX, wheelDeltaY,\r\n                newX, newY,\r\n                that = this;\r\n    \r\n            if ( this.wheelTimeout === undefined ) {\r\n                that._execEvent('scrollStart');\r\n            }\r\n    \r\n            // Execute the scrollEnd event after 400ms the wheel stopped scrolling\r\n            clearTimeout(this.wheelTimeout);\r\n            this.wheelTimeout = setTimeout(function () {\r\n                if(!that.options.snap) {\r\n                    that._execEvent('scrollEnd');\r\n                }\r\n                that.wheelTimeout = undefined;\r\n            }, 400);\r\n    \r\n            if ( 'deltaX' in e ) {\r\n                if (e.deltaMode === 1) {\r\n                    wheelDeltaX = -e.deltaX * this.options.mouseWheelSpeed;\r\n                    wheelDeltaY = -e.deltaY * this.options.mouseWheelSpeed;\r\n                } else {\r\n                    wheelDeltaX = -e.deltaX;\r\n                    wheelDeltaY = -e.deltaY;\r\n                }\r\n            } else if ( 'wheelDeltaX' in e ) {\r\n                wheelDeltaX = e.wheelDeltaX / 120 * this.options.mouseWheelSpeed;\r\n                wheelDeltaY = e.wheelDeltaY / 120 * this.options.mouseWheelSpeed;\r\n            } else if ( 'wheelDelta' in e ) {\r\n                wheelDeltaX = wheelDeltaY = e.wheelDelta / 120 * this.options.mouseWheelSpeed;\r\n            } else if ( 'detail' in e ) {\r\n                wheelDeltaX = wheelDeltaY = -e.detail / 3 * this.options.mouseWheelSpeed;\r\n            } else {\r\n                return;\r\n            }\r\n    \r\n            wheelDeltaX *= this.options.invertWheelDirection;\r\n            wheelDeltaY *= this.options.invertWheelDirection;\r\n    \r\n            if ( !this.hasVerticalScroll ) {\r\n                wheelDeltaX = wheelDeltaY;\r\n                wheelDeltaY = 0;\r\n            }\r\n    \r\n            if ( this.options.snap ) {\r\n                newX = this.currentPage.pageX;\r\n                newY = this.currentPage.pageY;\r\n    \r\n                if ( wheelDeltaX > 0 ) {\r\n                    newX--;\r\n                } else if ( wheelDeltaX < 0 ) {\r\n                    newX++;\r\n                }\r\n    \r\n                if ( wheelDeltaY > 0 ) {\r\n                    newY--;\r\n                } else if ( wheelDeltaY < 0 ) {\r\n                    newY++;\r\n                }\r\n    \r\n                this.goToPage(newX, newY);\r\n    \r\n                return;\r\n            }\r\n    \r\n            newX = this.x + Math.round(this.hasHorizontalScroll ? wheelDeltaX : 0);\r\n            newY = this.y + Math.round(this.hasVerticalScroll ? wheelDeltaY : 0);\r\n    \r\n            this.directionX = wheelDeltaX > 0 ? -1 : wheelDeltaX < 0 ? 1 : 0;\r\n            this.directionY = wheelDeltaY > 0 ? -1 : wheelDeltaY < 0 ? 1 : 0;\r\n    \r\n            if ( newX > 0 ) {\r\n                newX = 0;\r\n            } else if ( newX < this.maxScrollX ) {\r\n                newX = this.maxScrollX;\r\n            }\r\n    \r\n            if ( newY > 0 ) {\r\n                newY = 0;\r\n            } else if ( newY < this.maxScrollY ) {\r\n                newY = this.maxScrollY;\r\n            }\r\n    \r\n            this.scrollTo(newX, newY, 0);\r\n    \r\n            if ( this.options.probeType > 1 ) {\r\n                this._execEvent('scroll');\r\n            }\r\n    \r\n    // INSERT POINT: _wheel\r\n        },\r\n    \r\n        _initSnap: function () {\r\n            this.currentPage = {};\r\n    \r\n            if ( typeof this.options.snap == 'string' ) {\r\n                this.options.snap = this.scroller.querySelectorAll(this.options.snap);\r\n            }\r\n    \r\n            this.on('refresh', function () {\r\n                var i = 0, l,\r\n                    m = 0, n,\r\n                    cx, cy,\r\n                    x = 0, y,\r\n                    stepX = this.options.snapStepX || this.wrapperWidth,\r\n                    stepY = this.options.snapStepY || this.wrapperHeight,\r\n                    el,\r\n                    rect;\r\n    \r\n                this.pages = [];\r\n    \r\n                if ( !this.wrapperWidth || !this.wrapperHeight || !this.scrollerWidth || !this.scrollerHeight ) {\r\n                    return;\r\n                }\r\n    \r\n                if ( this.options.snap === true ) {\r\n                    cx = Math.round( stepX / 2 );\r\n                    cy = Math.round( stepY / 2 );\r\n    \r\n                    while ( x > -this.scrollerWidth ) {\r\n                        this.pages[i] = [];\r\n                        l = 0;\r\n                        y = 0;\r\n    \r\n                        while ( y > -this.scrollerHeight ) {\r\n                            this.pages[i][l] = {\r\n                                x: Math.max(x, this.maxScrollX),\r\n                                y: Math.max(y, this.maxScrollY),\r\n                                width: stepX,\r\n                                height: stepY,\r\n                                cx: x - cx,\r\n                                cy: y - cy\r\n                            };\r\n    \r\n                            y -= stepY;\r\n                            l++;\r\n                        }\r\n    \r\n                        x -= stepX;\r\n                        i++;\r\n                    }\r\n                } else {\r\n                    el = this.options.snap;\r\n                    l = el.length;\r\n                    n = -1;\r\n    \r\n                    for ( ; i < l; i++ ) {\r\n                        rect = utils.getRect(el[i]);\r\n                        if ( i === 0 || rect.left <= utils.getRect(el[i-1]).left ) {\r\n                            m = 0;\r\n                            n++;\r\n                        }\r\n    \r\n                        if ( !this.pages[m] ) {\r\n                            this.pages[m] = [];\r\n                        }\r\n    \r\n                        x = Math.max(-rect.left, this.maxScrollX);\r\n                        y = Math.max(-rect.top, this.maxScrollY);\r\n                        cx = x - Math.round(rect.width / 2);\r\n                        cy = y - Math.round(rect.height / 2);\r\n    \r\n                        this.pages[m][n] = {\r\n                            x: x,\r\n                            y: y,\r\n                            width: rect.width,\r\n                            height: rect.height,\r\n                            cx: cx,\r\n                            cy: cy\r\n                        };\r\n    \r\n                        if ( x > this.maxScrollX ) {\r\n                            m++;\r\n                        }\r\n                    }\r\n                }\r\n    \r\n                this.goToPage(this.currentPage.pageX || 0, this.currentPage.pageY || 0, 0);\r\n    \r\n                // Update snap threshold if needed\r\n                if ( this.options.snapThreshold % 1 === 0 ) {\r\n                    this.snapThresholdX = this.options.snapThreshold;\r\n                    this.snapThresholdY = this.options.snapThreshold;\r\n                } else {\r\n                    this.snapThresholdX = Math.round(this.pages[this.currentPage.pageX][this.currentPage.pageY].width * this.options.snapThreshold);\r\n                    this.snapThresholdY = Math.round(this.pages[this.currentPage.pageX][this.currentPage.pageY].height * this.options.snapThreshold);\r\n                }\r\n            });\r\n    \r\n            this.on('flick', function () {\r\n                var time = this.options.snapSpeed || Math.max(\r\n                        Math.max(\r\n                            Math.min(Math.abs(this.x - this.startX), 1000),\r\n                            Math.min(Math.abs(this.y - this.startY), 1000)\r\n                        ), 300);\r\n    \r\n                this.goToPage(\r\n                    this.currentPage.pageX + this.directionX,\r\n                    this.currentPage.pageY + this.directionY,\r\n                    time\r\n                );\r\n            });\r\n        },\r\n    \r\n        _nearestSnap: function (x, y) {\r\n            if ( !this.pages.length ) {\r\n                return { x: 0, y: 0, pageX: 0, pageY: 0 };\r\n            }\r\n    \r\n            var i = 0,\r\n                l = this.pages.length,\r\n                m = 0;\r\n    \r\n            // Check if we exceeded the snap threshold\r\n            if ( Math.abs(x - this.absStartX) < this.snapThresholdX &&\r\n                Math.abs(y - this.absStartY) < this.snapThresholdY ) {\r\n                return this.currentPage;\r\n            }\r\n    \r\n            if ( x > 0 ) {\r\n                x = 0;\r\n            } else if ( x < this.maxScrollX ) {\r\n                x = this.maxScrollX;\r\n            }\r\n    \r\n            if ( y > 0 ) {\r\n                y = 0;\r\n            } else if ( y < this.maxScrollY ) {\r\n                y = this.maxScrollY;\r\n            }\r\n    \r\n            for ( ; i < l; i++ ) {\r\n                if ( x >= this.pages[i][0].cx ) {\r\n                    x = this.pages[i][0].x;\r\n                    break;\r\n                }\r\n            }\r\n    \r\n            l = this.pages[i].length;\r\n    \r\n            for ( ; m < l; m++ ) {\r\n                if ( y >= this.pages[0][m].cy ) {\r\n                    y = this.pages[0][m].y;\r\n                    break;\r\n                }\r\n            }\r\n    \r\n            if ( i == this.currentPage.pageX ) {\r\n                i += this.directionX;\r\n    \r\n                if ( i < 0 ) {\r\n                    i = 0;\r\n                } else if ( i >= this.pages.length ) {\r\n                    i = this.pages.length - 1;\r\n                }\r\n    \r\n                x = this.pages[i][0].x;\r\n            }\r\n    \r\n            if ( m == this.currentPage.pageY ) {\r\n                m += this.directionY;\r\n    \r\n                if ( m < 0 ) {\r\n                    m = 0;\r\n                } else if ( m >= this.pages[0].length ) {\r\n                    m = this.pages[0].length - 1;\r\n                }\r\n    \r\n                y = this.pages[0][m].y;\r\n            }\r\n    \r\n            return {\r\n                x: x,\r\n                y: y,\r\n                pageX: i,\r\n                pageY: m\r\n            };\r\n        },\r\n    \r\n        goToPage: function (x, y, time, easing) {\r\n            easing = easing || this.options.bounceEasing;\r\n    \r\n            if ( x >= this.pages.length ) {\r\n                x = this.pages.length - 1;\r\n            } else if ( x < 0 ) {\r\n                x = 0;\r\n            }\r\n    \r\n            if ( y >= this.pages[x].length ) {\r\n                y = this.pages[x].length - 1;\r\n            } else if ( y < 0 ) {\r\n                y = 0;\r\n            }\r\n    \r\n            var posX = this.pages[x][y].x,\r\n                posY = this.pages[x][y].y;\r\n    \r\n            time = time === undefined ? this.options.snapSpeed || Math.max(\r\n                Math.max(\r\n                    Math.min(Math.abs(posX - this.x), 1000),\r\n                    Math.min(Math.abs(posY - this.y), 1000)\r\n                ), 300) : time;\r\n    \r\n            this.currentPage = {\r\n                x: posX,\r\n                y: posY,\r\n                pageX: x,\r\n                pageY: y\r\n            };\r\n    \r\n            this.scrollTo(posX, posY, time, easing);\r\n        },\r\n    \r\n        next: function (time, easing) {\r\n            var x = this.currentPage.pageX,\r\n                y = this.currentPage.pageY;\r\n    \r\n            x++;\r\n    \r\n            if ( x >= this.pages.length && this.hasVerticalScroll ) {\r\n                x = 0;\r\n                y++;\r\n            }\r\n    \r\n            this.goToPage(x, y, time, easing);\r\n        },\r\n    \r\n        prev: function (time, easing) {\r\n            var x = this.currentPage.pageX,\r\n                y = this.currentPage.pageY;\r\n    \r\n            x--;\r\n    \r\n            if ( x < 0 && this.hasVerticalScroll ) {\r\n                x = 0;\r\n                y--;\r\n            }\r\n    \r\n            this.goToPage(x, y, time, easing);\r\n        },\r\n    \r\n        _initKeys: function (e) {\r\n            // default key bindings\r\n            var keys = {\r\n                pageUp: 33,\r\n                pageDown: 34,\r\n                end: 35,\r\n                home: 36,\r\n                left: 37,\r\n                up: 38,\r\n                right: 39,\r\n                down: 40\r\n            };\r\n            var i;\r\n    \r\n            // if you give me characters I give you keycode\r\n            if ( typeof this.options.keyBindings == 'object' ) {\r\n                for ( i in this.options.keyBindings ) {\r\n                    if ( typeof this.options.keyBindings[i] == 'string' ) {\r\n                        this.options.keyBindings[i] = this.options.keyBindings[i].toUpperCase().charCodeAt(0);\r\n                    }\r\n                }\r\n            } else {\r\n                this.options.keyBindings = {};\r\n            }\r\n    \r\n            for ( i in keys ) {\r\n                this.options.keyBindings[i] = this.options.keyBindings[i] || keys[i];\r\n            }\r\n    \r\n            utils.addEvent(window, 'keydown', this);\r\n    \r\n            this.on('destroy', function () {\r\n                utils.removeEvent(window, 'keydown', this);\r\n            });\r\n        },\r\n    \r\n        _key: function (e) {\r\n            if ( !this.enabled ) {\r\n                return;\r\n            }\r\n    \r\n            var snap = this.options.snap,\t// we are using this alot, better to cache it\r\n                newX = snap ? this.currentPage.pageX : this.x,\r\n                newY = snap ? this.currentPage.pageY : this.y,\r\n                now = utils.getTime(),\r\n                prevTime = this.keyTime || 0,\r\n                acceleration = 0.250,\r\n                pos;\r\n    \r\n            if ( this.options.useTransition && this.isInTransition ) {\r\n                pos = this.getComputedPosition();\r\n    \r\n                this._translate(Math.round(pos.x), Math.round(pos.y));\r\n                this.isInTransition = false;\r\n            }\r\n    \r\n            this.keyAcceleration = now - prevTime < 200 ? Math.min(this.keyAcceleration + acceleration, 50) : 0;\r\n    \r\n            switch ( e.keyCode ) {\r\n                case this.options.keyBindings.pageUp:\r\n                    if ( this.hasHorizontalScroll && !this.hasVerticalScroll ) {\r\n                        newX += snap ? 1 : this.wrapperWidth;\r\n                    } else {\r\n                        newY += snap ? 1 : this.wrapperHeight;\r\n                    }\r\n                    break;\r\n                case this.options.keyBindings.pageDown:\r\n                    if ( this.hasHorizontalScroll && !this.hasVerticalScroll ) {\r\n                        newX -= snap ? 1 : this.wrapperWidth;\r\n                    } else {\r\n                        newY -= snap ? 1 : this.wrapperHeight;\r\n                    }\r\n                    break;\r\n                case this.options.keyBindings.end:\r\n                    newX = snap ? this.pages.length-1 : this.maxScrollX;\r\n                    newY = snap ? this.pages[0].length-1 : this.maxScrollY;\r\n                    break;\r\n                case this.options.keyBindings.home:\r\n                    newX = 0;\r\n                    newY = 0;\r\n                    break;\r\n                case this.options.keyBindings.left:\r\n                    newX += snap ? -1 : 5 + this.keyAcceleration>>0;\r\n                    break;\r\n                case this.options.keyBindings.up:\r\n                    newY += snap ? 1 : 5 + this.keyAcceleration>>0;\r\n                    break;\r\n                case this.options.keyBindings.right:\r\n                    newX -= snap ? -1 : 5 + this.keyAcceleration>>0;\r\n                    break;\r\n                case this.options.keyBindings.down:\r\n                    newY -= snap ? 1 : 5 + this.keyAcceleration>>0;\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n    \r\n            if ( snap ) {\r\n                this.goToPage(newX, newY);\r\n                return;\r\n            }\r\n    \r\n            if ( newX > 0 ) {\r\n                newX = 0;\r\n                this.keyAcceleration = 0;\r\n            } else if ( newX < this.maxScrollX ) {\r\n                newX = this.maxScrollX;\r\n                this.keyAcceleration = 0;\r\n            }\r\n    \r\n            if ( newY > 0 ) {\r\n                newY = 0;\r\n                this.keyAcceleration = 0;\r\n            } else if ( newY < this.maxScrollY ) {\r\n                newY = this.maxScrollY;\r\n                this.keyAcceleration = 0;\r\n            }\r\n    \r\n            this.scrollTo(newX, newY, 0);\r\n    \r\n            this.keyTime = now;\r\n        },\r\n    \r\n        _animate: function (destX, destY, duration, easingFn) {\r\n            var that = this,\r\n                startX = this.x,\r\n                startY = this.y,\r\n                startTime = utils.getTime(),\r\n                destTime = startTime + duration;\r\n    \r\n            function step () {\r\n                var now = utils.getTime(),\r\n                    newX, newY,\r\n                    easing;\r\n    \r\n                if ( now >= destTime ) {\r\n                    that.isAnimating = false;\r\n                    that._translate(destX, destY);\r\n                    \r\n                    if ( !that.resetPosition(that.options.bounceTime) ) {\r\n                        that._execEvent('scrollEnd');\r\n                    }\r\n    \r\n                    return;\r\n                }\r\n    \r\n                now = ( now - startTime ) / duration;\r\n                easing = easingFn(now);\r\n                newX = ( destX - startX ) * easing + startX;\r\n                newY = ( destY - startY ) * easing + startY;\r\n                that._translate(newX, newY);\r\n    \r\n                if ( that.isAnimating ) {\r\n                    rAF(step);\r\n                }\r\n    \r\n                if ( that.options.probeType == 3 ) {\r\n                    that._execEvent('scroll');\r\n                }\r\n            }\r\n    \r\n            this.isAnimating = true;\r\n            step();\r\n        },\r\n    \r\n        handleEvent: function (e) {\r\n            switch ( e.type ) {\r\n                case 'touchstart':\r\n                case 'pointerdown':\r\n                case 'MSPointerDown':\r\n                case 'mousedown':\r\n                    this._start(e);\r\n                    break;\r\n                case 'touchmove':\r\n                case 'pointermove':\r\n                case 'MSPointerMove':\r\n                case 'mousemove':\r\n                    this._move(e);\r\n                    break;\r\n                case 'touchend':\r\n                case 'pointerup':\r\n                case 'MSPointerUp':\r\n                case 'mouseup':\r\n                case 'touchcancel':\r\n                case 'pointercancel':\r\n                case 'MSPointerCancel':\r\n                case 'mousecancel':\r\n                    this._end(e);\r\n                    break;\r\n                case 'orientationchange':\r\n                case 'resize':\r\n                    this._resize();\r\n                    break;\r\n                case 'transitionend':\r\n                case 'webkitTransitionEnd':\r\n                case 'oTransitionEnd':\r\n                case 'MSTransitionEnd':\r\n                    this._transitionEnd(e);\r\n                    break;\r\n                case 'wheel':\r\n                case 'DOMMouseScroll':\r\n                case 'mousewheel':\r\n                    this._wheel(e);\r\n                    break;\r\n                case 'keydown':\r\n                    this._key(e);\r\n                    break;\r\n                case 'click':\r\n                    if ( this.enabled && !e._constructed ) {\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n    function createDefaultScrollbar (direction, interactive, type) {\r\n        var scrollbar = document.createElement('div'),\r\n            indicator = document.createElement('div');\r\n    \r\n        if ( type === true ) {\r\n            scrollbar.style.cssText = 'position:absolute;z-index:9999';\r\n            indicator.style.cssText = '-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;position:absolute;background:rgba(0,0,0,0.5);border:1px solid rgba(255,255,255,0.9);border-radius:3px';\r\n        }\r\n    \r\n        indicator.className = 'iScrollIndicator';\r\n    \r\n        if ( direction == 'h' ) {\r\n            if ( type === true ) {\r\n                scrollbar.style.cssText += ';height:7px;left:2px;right:2px;bottom:0';\r\n                indicator.style.height = '100%';\r\n            }\r\n            scrollbar.className = 'iScrollHorizontalScrollbar';\r\n        } else {\r\n            if ( type === true ) {\r\n                scrollbar.style.cssText += ';width:7px;bottom:2px;top:2px;right:1px';\r\n                indicator.style.width = '100%';\r\n            }\r\n            scrollbar.className = 'iScrollVerticalScrollbar';\r\n        }\r\n    \r\n        scrollbar.style.cssText += ';overflow:hidden';\r\n    \r\n        if ( !interactive ) {\r\n            scrollbar.style.pointerEvents = 'none';\r\n        }\r\n    \r\n        scrollbar.appendChild(indicator);\r\n    \r\n        return scrollbar;\r\n    }\r\n    \r\n    function Indicator (scroller, options) {\r\n        this.wrapper = typeof options.el == 'string' ? document.querySelector(options.el) : options.el;\r\n        this.wrapperStyle = this.wrapper.style;\r\n        this.indicator = this.wrapper.children[0];\r\n        this.indicatorStyle = this.indicator.style;\r\n        this.scroller = scroller;\r\n    \r\n        this.options = {\r\n            listenX: true,\r\n            listenY: true,\r\n            interactive: false,\r\n            resize: true,\r\n            defaultScrollbars: false,\r\n            shrink: false,\r\n            fade: false,\r\n            speedRatioX: 0,\r\n            speedRatioY: 0\r\n        };\r\n    \r\n        for ( var i in options ) {\r\n            this.options[i] = options[i];\r\n        }\r\n    \r\n        this.sizeRatioX = 1;\r\n        this.sizeRatioY = 1;\r\n        this.maxPosX = 0;\r\n        this.maxPosY = 0;\r\n    \r\n        if ( this.options.interactive ) {\r\n            if ( !this.options.disableTouch ) {\r\n                utils.addEvent(this.indicator, 'touchstart', this);\r\n                utils.addEvent(window, 'touchend', this);\r\n            }\r\n            if ( !this.options.disablePointer ) {\r\n                utils.addEvent(this.indicator, utils.prefixPointerEvent('pointerdown'), this);\r\n                utils.addEvent(window, utils.prefixPointerEvent('pointerup'), this);\r\n            }\r\n            if ( !this.options.disableMouse ) {\r\n                utils.addEvent(this.indicator, 'mousedown', this);\r\n                utils.addEvent(window, 'mouseup', this);\r\n            }\r\n        }\r\n    \r\n        if ( this.options.fade ) {\r\n            this.wrapperStyle[utils.style.transform] = this.scroller.translateZ;\r\n            var durationProp = utils.style.transitionDuration;\r\n            if(!durationProp) {\r\n                return;\r\n            }\r\n            this.wrapperStyle[durationProp] = utils.isBadAndroid ? '0.0001ms' : '0ms';\r\n            // remove 0.0001ms\r\n            var self = this;\r\n            if(utils.isBadAndroid) {\r\n                rAF(function() {\r\n                    if(self.wrapperStyle[durationProp] === '0.0001ms') {\r\n                        self.wrapperStyle[durationProp] = '0s';\r\n                    }\r\n                });\r\n            }\r\n            this.wrapperStyle.opacity = '0';\r\n        }\r\n    }\r\n    \r\n    Indicator.prototype = {\r\n        handleEvent: function (e) {\r\n            switch ( e.type ) {\r\n                case 'touchstart':\r\n                case 'pointerdown':\r\n                case 'MSPointerDown':\r\n                case 'mousedown':\r\n                    this._start(e);\r\n                    break;\r\n                case 'touchmove':\r\n                case 'pointermove':\r\n                case 'MSPointerMove':\r\n                case 'mousemove':\r\n                    this._move(e);\r\n                    break;\r\n                case 'touchend':\r\n                case 'pointerup':\r\n                case 'MSPointerUp':\r\n                case 'mouseup':\r\n                case 'touchcancel':\r\n                case 'pointercancel':\r\n                case 'MSPointerCancel':\r\n                case 'mousecancel':\r\n                    this._end(e);\r\n                    break;\r\n            }\r\n        },\r\n    \r\n        destroy: function () {\r\n            if ( this.options.fadeScrollbars ) {\r\n                clearTimeout(this.fadeTimeout);\r\n                this.fadeTimeout = null;\r\n            }\r\n            if ( this.options.interactive ) {\r\n                utils.removeEvent(this.indicator, 'touchstart', this);\r\n                utils.removeEvent(this.indicator, utils.prefixPointerEvent('pointerdown'), this);\r\n                utils.removeEvent(this.indicator, 'mousedown', this);\r\n    \r\n                utils.removeEvent(window, 'touchmove', this);\r\n                utils.removeEvent(window, utils.prefixPointerEvent('pointermove'), this);\r\n                utils.removeEvent(window, 'mousemove', this);\r\n    \r\n                utils.removeEvent(window, 'touchend', this);\r\n                utils.removeEvent(window, utils.prefixPointerEvent('pointerup'), this);\r\n                utils.removeEvent(window, 'mouseup', this);\r\n            }\r\n    \r\n            if ( this.options.defaultScrollbars && this.wrapper.parentNode ) {\r\n                this.wrapper.parentNode.removeChild(this.wrapper);\r\n            }\r\n        },\r\n    \r\n        _start: function (e) {\r\n            var point = e.touches ? e.touches[0] : e;\r\n    \r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n    \r\n            this.transitionTime();\r\n    \r\n            this.initiated = true;\r\n            this.moved = false;\r\n            this.lastPointX\t= point.pageX;\r\n            this.lastPointY\t= point.pageY;\r\n    \r\n            this.startTime\t= utils.getTime();\r\n    \r\n            if ( !this.options.disableTouch ) {\r\n                utils.addEvent(window, 'touchmove', this);\r\n            }\r\n            if ( !this.options.disablePointer ) {\r\n                utils.addEvent(window, utils.prefixPointerEvent('pointermove'), this);\r\n            }\r\n            if ( !this.options.disableMouse ) {\r\n                utils.addEvent(window, 'mousemove', this);\r\n            }\r\n    \r\n            this.scroller._execEvent('beforeScrollStart');\r\n        },\r\n    \r\n        _move: function (e) {\r\n            var point = e.touches ? e.touches[0] : e,\r\n                deltaX, deltaY,\r\n                newX, newY,\r\n                timestamp = utils.getTime();\r\n    \r\n            if ( !this.moved ) {\r\n                this.scroller._execEvent('scrollStart');\r\n            }\r\n    \r\n            this.moved = true;\r\n    \r\n            deltaX = point.pageX - this.lastPointX;\r\n            this.lastPointX = point.pageX;\r\n    \r\n            deltaY = point.pageY - this.lastPointY;\r\n            this.lastPointY = point.pageY;\r\n    \r\n            newX = this.x + deltaX;\r\n            newY = this.y + deltaY;\r\n    \r\n            this._pos(newX, newY);\r\n    \r\n    \r\n            if ( this.scroller.options.probeType == 1 && timestamp - this.startTime > 300 ) {\r\n                this.startTime = timestamp;\r\n                this.scroller._execEvent('scroll');\r\n            } else if ( this.scroller.options.probeType > 1 ) {\r\n                this.scroller._execEvent('scroll');\r\n            }\r\n    \r\n    \r\n    // INSERT POINT: indicator._move\r\n    \r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n        },\r\n    \r\n        _end: function (e) {\r\n            if ( !this.initiated ) {\r\n                return;\r\n            }\r\n    \r\n            this.initiated = false;\r\n    \r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n    \r\n            utils.removeEvent(window, 'touchmove', this);\r\n            utils.removeEvent(window, utils.prefixPointerEvent('pointermove'), this);\r\n            utils.removeEvent(window, 'mousemove', this);\r\n    \r\n            if ( this.scroller.options.snap ) {\r\n                var snap = this.scroller._nearestSnap(this.scroller.x, this.scroller.y);\r\n    \r\n                var time = this.options.snapSpeed || Math.max(\r\n                        Math.max(\r\n                            Math.min(Math.abs(this.scroller.x - snap.x), 1000),\r\n                            Math.min(Math.abs(this.scroller.y - snap.y), 1000)\r\n                        ), 300);\r\n    \r\n                if ( this.scroller.x != snap.x || this.scroller.y != snap.y ) {\r\n                    this.scroller.directionX = 0;\r\n                    this.scroller.directionY = 0;\r\n                    this.scroller.currentPage = snap;\r\n                    this.scroller.scrollTo(snap.x, snap.y, time, this.scroller.options.bounceEasing);\r\n                }\r\n            }\r\n    \r\n            if ( this.moved ) {\r\n                this.scroller._execEvent('scrollEnd');\r\n            }\r\n        },\r\n    \r\n        transitionTime: function (time) {\r\n            time = time || 0;\r\n            var durationProp = utils.style.transitionDuration;\r\n            if(!durationProp) {\r\n                return;\r\n            }\r\n    \r\n            this.indicatorStyle[durationProp] = time + 'ms';\r\n    \r\n            if ( !time && utils.isBadAndroid ) {\r\n                this.indicatorStyle[durationProp] = '0.0001ms';\r\n                // remove 0.0001ms\r\n                var self = this;\r\n                rAF(function() {\r\n                    if(self.indicatorStyle[durationProp] === '0.0001ms') {\r\n                        self.indicatorStyle[durationProp] = '0s';\r\n                    }\r\n                });\r\n            }\r\n        },\r\n    \r\n        transitionTimingFunction: function (easing) {\r\n            this.indicatorStyle[utils.style.transitionTimingFunction] = easing;\r\n        },\r\n    \r\n        refresh: function () {\r\n            this.transitionTime();\r\n    \r\n            if ( this.options.listenX && !this.options.listenY ) {\r\n                this.indicatorStyle.display = this.scroller.hasHorizontalScroll ? 'block' : 'none';\r\n            } else if ( this.options.listenY && !this.options.listenX ) {\r\n                this.indicatorStyle.display = this.scroller.hasVerticalScroll ? 'block' : 'none';\r\n            } else {\r\n                this.indicatorStyle.display = this.scroller.hasHorizontalScroll || this.scroller.hasVerticalScroll ? 'block' : 'none';\r\n            }\r\n    \r\n            if ( this.scroller.hasHorizontalScroll && this.scroller.hasVerticalScroll ) {\r\n                utils.addClass(this.wrapper, 'iScrollBothScrollbars');\r\n                utils.removeClass(this.wrapper, 'iScrollLoneScrollbar');\r\n    \r\n                if ( this.options.defaultScrollbars && this.options.customStyle ) {\r\n                    if ( this.options.listenX ) {\r\n                        this.wrapper.style.right = '8px';\r\n                    } else {\r\n                        this.wrapper.style.bottom = '8px';\r\n                    }\r\n                }\r\n            } else {\r\n                utils.removeClass(this.wrapper, 'iScrollBothScrollbars');\r\n                utils.addClass(this.wrapper, 'iScrollLoneScrollbar');\r\n    \r\n                if ( this.options.defaultScrollbars && this.options.customStyle ) {\r\n                    if ( this.options.listenX ) {\r\n                        this.wrapper.style.right = '2px';\r\n                    } else {\r\n                        this.wrapper.style.bottom = '2px';\r\n                    }\r\n                }\r\n            }\r\n    \r\n            utils.getRect(this.wrapper);\t// force refresh\r\n    \r\n            if ( this.options.listenX ) {\r\n                this.wrapperWidth = this.wrapper.clientWidth;\r\n                if ( this.options.resize ) {\r\n                    this.indicatorWidth = Math.max(Math.round(this.wrapperWidth * this.wrapperWidth / (this.scroller.scrollerWidth || this.wrapperWidth || 1)), 8);\r\n                    this.indicatorStyle.width = this.indicatorWidth + 'px';\r\n                } else {\r\n                    this.indicatorWidth = this.indicator.clientWidth;\r\n                }\r\n    \r\n                this.maxPosX = this.wrapperWidth - this.indicatorWidth;\r\n    \r\n                if ( this.options.shrink == 'clip' ) {\r\n                    this.minBoundaryX = -this.indicatorWidth + 8;\r\n                    this.maxBoundaryX = this.wrapperWidth - 8;\r\n                } else {\r\n                    this.minBoundaryX = 0;\r\n                    this.maxBoundaryX = this.maxPosX;\r\n                }\r\n    \r\n                this.sizeRatioX = this.options.speedRatioX || (this.scroller.maxScrollX && (this.maxPosX / this.scroller.maxScrollX));\r\n            }\r\n    \r\n            if ( this.options.listenY ) {\r\n                this.wrapperHeight = this.wrapper.clientHeight;\r\n                if ( this.options.resize ) {\r\n                    this.indicatorHeight = Math.max(Math.round(this.wrapperHeight * this.wrapperHeight / (this.scroller.scrollerHeight || this.wrapperHeight || 1)), 8);\r\n                    this.indicatorStyle.height = this.indicatorHeight + 'px';\r\n                } else {\r\n                    this.indicatorHeight = this.indicator.clientHeight;\r\n                }\r\n    \r\n                this.maxPosY = this.wrapperHeight - this.indicatorHeight;\r\n    \r\n                if ( this.options.shrink == 'clip' ) {\r\n                    this.minBoundaryY = -this.indicatorHeight + 8;\r\n                    this.maxBoundaryY = this.wrapperHeight - 8;\r\n                } else {\r\n                    this.minBoundaryY = 0;\r\n                    this.maxBoundaryY = this.maxPosY;\r\n                }\r\n    \r\n                this.maxPosY = this.wrapperHeight - this.indicatorHeight;\r\n                this.sizeRatioY = this.options.speedRatioY || (this.scroller.maxScrollY && (this.maxPosY / this.scroller.maxScrollY));\r\n            }\r\n    \r\n            this.updatePosition();\r\n        },\r\n    \r\n        updatePosition: function () {\r\n            var x = this.options.listenX && Math.round(this.sizeRatioX * this.scroller.x) || 0,\r\n                y = this.options.listenY && Math.round(this.sizeRatioY * this.scroller.y) || 0;\r\n    \r\n            if ( !this.options.ignoreBoundaries ) {\r\n                if ( x < this.minBoundaryX ) {\r\n                    if ( this.options.shrink == 'scale' ) {\r\n                        this.width = Math.max(this.indicatorWidth + x, 8);\r\n                        this.indicatorStyle.width = this.width + 'px';\r\n                    }\r\n                    x = this.minBoundaryX;\r\n                } else if ( x > this.maxBoundaryX ) {\r\n                    if ( this.options.shrink == 'scale' ) {\r\n                        this.width = Math.max(this.indicatorWidth - (x - this.maxPosX), 8);\r\n                        this.indicatorStyle.width = this.width + 'px';\r\n                        x = this.maxPosX + this.indicatorWidth - this.width;\r\n                    } else {\r\n                        x = this.maxBoundaryX;\r\n                    }\r\n                } else if ( this.options.shrink == 'scale' && this.width != this.indicatorWidth ) {\r\n                    this.width = this.indicatorWidth;\r\n                    this.indicatorStyle.width = this.width + 'px';\r\n                }\r\n    \r\n                if ( y < this.minBoundaryY ) {\r\n                    if ( this.options.shrink == 'scale' ) {\r\n                        this.height = Math.max(this.indicatorHeight + y * 3, 8);\r\n                        this.indicatorStyle.height = this.height + 'px';\r\n                    }\r\n                    y = this.minBoundaryY;\r\n                } else if ( y > this.maxBoundaryY ) {\r\n                    if ( this.options.shrink == 'scale' ) {\r\n                        this.height = Math.max(this.indicatorHeight - (y - this.maxPosY) * 3, 8);\r\n                        this.indicatorStyle.height = this.height + 'px';\r\n                        y = this.maxPosY + this.indicatorHeight - this.height;\r\n                    } else {\r\n                        y = this.maxBoundaryY;\r\n                    }\r\n                } else if ( this.options.shrink == 'scale' && this.height != this.indicatorHeight ) {\r\n                    this.height = this.indicatorHeight;\r\n                    this.indicatorStyle.height = this.height + 'px';\r\n                }\r\n            }\r\n    \r\n            this.x = x;\r\n            this.y = y;\r\n    \r\n            if ( this.scroller.options.useTransform ) {\r\n                this.indicatorStyle[utils.style.transform] = 'translate(' + x + 'px,' + y + 'px)' + this.scroller.translateZ;\r\n            } else {\r\n                this.indicatorStyle.left = x + 'px';\r\n                this.indicatorStyle.top = y + 'px';\r\n            }\r\n        },\r\n    \r\n        _pos: function (x, y) {\r\n            if ( x < 0 ) {\r\n                x = 0;\r\n            } else if ( x > this.maxPosX ) {\r\n                x = this.maxPosX;\r\n            }\r\n    \r\n            if ( y < 0 ) {\r\n                y = 0;\r\n            } else if ( y > this.maxPosY ) {\r\n                y = this.maxPosY;\r\n            }\r\n    \r\n            x = this.options.listenX ? Math.round(x / this.sizeRatioX) : this.scroller.x;\r\n            y = this.options.listenY ? Math.round(y / this.sizeRatioY) : this.scroller.y;\r\n    \r\n            this.scroller.scrollTo(x, y);\r\n        },\r\n    \r\n        fade: function (val, hold) {\r\n            if ( hold && !this.visible ) {\r\n                return;\r\n            }\r\n    \r\n            clearTimeout(this.fadeTimeout);\r\n            this.fadeTimeout = null;\r\n    \r\n            var time = val ? 250 : 500,\r\n                delay = val ? 0 : 300;\r\n    \r\n            val = val ? '1' : '0';\r\n    \r\n            this.wrapperStyle[utils.style.transitionDuration] = time + 'ms';\r\n    \r\n            this.fadeTimeout = setTimeout((function (val) {\r\n                this.wrapperStyle.opacity = val;\r\n                this.visible = +val;\r\n            }).bind(this, val), delay);\r\n        }\r\n    };\r\n    \r\n    IScroll.utils = utils;\r\n    \r\n    if ( typeof module != 'undefined' && module.exports ) {\r\n        module.exports = IScroll;\r\n    } else if ( true ) {\r\n            !(__WEBPACK_AMD_DEFINE_RESULT__ = function () { return IScroll; }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n    } else {\r\n        window.IScroll = IScroll;\r\n    }\r\n    \r\n    })(window, document, Math);\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,")}]);